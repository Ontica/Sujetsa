using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TradeDataSchemaManager.Services {


  internal enum ConnectionName {
    ProductosNkConn,
    ProductosNKHidroplomex,
    ArtículosMicrosip
  }


  internal class ConnectionModel {

    public List<FbConnectionSettings> ConnectionSettings = new List<FbConnectionSettings>();

    public string SqlConnectionString {
      get; set;
    } = string.Empty;
  }


  internal class FbConnectionSettings {

    public int ConnectionId {
      get; set;
    }

    public string ConnectionName {
      get; set;
    } = string.Empty;

    public string ConnectionString {
      get; set;
    } = string.Empty;

  }


  public class FbQueryStrings {

    public string productosNkConn = "SELECT PRODUCTO.PRODUCTO,PRODUCTO.CLAVEPRODSERV,PRODUCTO.DESCRIPCION, PRODUCTO.ALTA, PRODUCTO.LINEA, " +
      "LINEA.NOMBRE NLINEA, PRODUCTO.GRUPO, GRUPO.DESCRIPCION NGRUPO, PRODUCTO.SUBGRUPO, SUBGRUPO.DESCRIPCION NSUBGRUPO, LARGO, PRODUCTO.SECCION, "+
      "SECCION.NOMBRE, PRODUCTO.MODELO PASOS, MODELO.DESCRIPCION NPASOS, PRODUCTO.TALLA CABEZAS, TALLA.DESCRIPCION NCABEZAS, PRODUCTO.COLOR ACABADOS, " +
      "COLOR.DESCRIPCION NACABADOS, PRODUCTO.COSTO_BASE, LISTA.PRECIO AS PMINIMO,INVENTARIO.EXISTENCIA, PRODUCTO.UNIDAD UNIDAD_VENTA, PRODUCTO.MONEDA, " +
      "LISTA1.PRECIO PLISTA_1, LISTA2.PRECIO PLISTA_2, LISTA.PRECIO PLISTA_3, LISTA4.PRECIO PLISTA_4, PRODUCTO.EMPAQUE, PRODUCTO.MULTIPLO_RESURTIDO, "+
      "FECHA_ULTIMA.COSTO1 COSTO_ULTIMA_COMPRA, PRODUCTO.PROV1 PROVEEDOR, PROVEEDOR.NOMBRE_COMERCIAL NPROVEEDOR, PRODUCTO.TIPO,PRODUCTO.BAJA, " +
      "PRODUCTO.PESO, PRODUCTO.CATEGORIA, ALMACEN1.MINIMO MINIMO_RESURTIDO, PRODUCTO.USR1 DIAMETRO, PRODUCTO.USR2 LARGO, PRODUCTO.USR3 GRADO, " +
      "PRODUCTO.SECCION HILOS, SECCION.NOMBRE NHILOS " +
      "FROM PRODUCTO " +
      "LEFT JOIN LINEA ON PRODUCTO.LINEA = LINEA.LINEA " +
      "LEFT JOIN GRUPO ON PRODUCTO.GRUPO = GRUPO.GRUPO " +
      "LEFT JOIN SUBGRUPO ON PRODUCTO.GRUPO = SUBGRUPO.GRUPO AND PRODUCTO.SUBGRUPO = SUBGRUPO.SUBGRUPO " +
      "LEFT JOIN SECCION ON PRODUCTO.SECCION = SECCION.SECCION " +
      "LEFT JOIN MODELO ON PRODUCTO.MODELO = MODELO.MODELO " +
      "LEFT JOIN TALLA ON PRODUCTO.TALLA = TALLA.TALLA " +
      "LEFT JOIN COLOR  ON PRODUCTO.COLOR = COLOR.COLOR " +
      "INNER JOIN " +
      " (SELECT  PRODUCTO, LISTA, PRECIO FROM LISTAPRECIOS WHERE LISTA = 3) LISTA ON LISTA.PRODUCTO = PRODUCTO.PRODUCTO " +
      " LEFT JOIN " +
      " (SELECT PRODUCTO, SUM(CANTIDAD) EXISTENCIA FROM CAPA GROUP BY CAPA.PRODUCTO) INVENTARIO ON PRODUCTO.PRODUCTO = INVENTARIO.PRODUCTO " +
      " INNER JOIN " +
      " (SELECT  PRODUCTO, LISTA, PRECIO FROM LISTAPRECIOS WHERE LISTA = 1) LISTA1 ON LISTA1.PRODUCTO = PRODUCTO.PRODUCTO " +
      " INNER JOIN " +
      " (SELECT  PRODUCTO, LISTA, PRECIO FROM LISTAPRECIOS WHERE LISTA = 2) LISTA2 ON LISTA2.PRODUCTO = PRODUCTO.PRODUCTO " +
      " INNER JOIN " +
      " (SELECT  PRODUCTO, LISTA, PRECIO FROM LISTAPRECIOS WHERE LISTA = 5) LISTA4 ON LISTA4.PRODUCTO = PRODUCTO.PRODUCTO " +
      " LEFT JOIN " +
      " (SELECT  MAX(COMPRA.FECHA) FECHA_ULTIMA_COMP, COMPRADET.PRODUCTO, COMPRADET.costo COSTO1 FROM COMPRADET " +
      "   INNER JOIN COMPRA ON  COMPRA.COMPRA = COMPRADET.COMPRA " +
      "   GROUP BY COMPRA.FECHA, COMPRADET.PRODUCTO ,COMPRADET.costo " +
      "   ORDER BY compra.fecha DESC) FECHA_ULTIMA ON FECHA_ULTIMA.PRODUCTO = PRODUCTO.PRODUCTO " +
      " LEFT JOIN PROVEEDOR ON PROVEEDOR.PROVEEDOR = PRODUCTO.PROV1 " +
      " LEFT JOIN (SELECT PRODUCTO, MINIMO, ALMACEN.ALMACEN,ALMACEN.PRINCIPAL FROM productoalmacen " +
      "   LEFT JOIN ALMACEN ON ALMACEN.ALMACEN = PRODUCTOALMACEN.ALMACEN where almacen.principal = 'S' ) ALMACEN1" +
      " ON ALMACEN1.PRODUCTO = PRODUCTO.PRODUCTO " +
      "WHERE PRODUCTO.BAJA = 'N'";


    public string productosNKHidroplomexConn =
      "SELECT PRODUCTO.PRODUCTO, CLAVEPRODSERV, PRODUCTO.DESCRIPCION, DESC_LARGA, ALTA, PRODUCTO.LINEA, PRODUCTO.GRUPO, " +
      "PRODUCTO.SUBGRUPO, LARGO, COSTO_BASE, PRODUCTO.MONEDA, PRECIO1, PRECIO2, PRECIO3, PRECIO4, EMPAQUE, MULTIPLO_RESURTIDO, " +
      "PRODUCTO.PROVEEDOR, PRODUCTO.TIPO, PRODUCTO.BAJA, " +
      "CATEGORIA, UNIDAD_COMPRA, UNIDAD_VENTA_MENUDEO UNIDAD_VENTA, GRUPO.DESCRIPCION NGRUPO, INVENTARIO.EXISTENCIA, " +
      "LINEA.NOMBRE NLINEA, SUBGRUPO.DESCRIPCION NSUBGRUPO, " +
      "GIRO.NOMBRE GIRO, MARCA.NOMBRE MARCA, SECCION.NOMBRE SECCION, MODELO.DESCRIPCION MODELO, " +
      "COMPRAS.FECHA_ULTIMA_COMPRA, COMPRAS.COSTO_ULTIMA_COMPRA, " +
      "PROVEEDOR.NOMBRE NPROVEEDOR " +
      "FROM PRODUCTO " +
      "LEFT JOIN LINEA ON PRODUCTO.LINEA = LINEA.LINEA " +
      "LEFT JOIN MARCA ON PRODUCTO.MARCA = MARCA.MARCA " +
      "LEFT JOIN GRUPO ON PRODUCTO.GRUPO = GRUPO.GRUPO " +
      "LEFT JOIN SECCION ON PRODUCTO.SECCION = SECCION.SECCION " +
      "LEFT JOIN MODELO ON PRODUCTO.MODELO = MODELO.MODELO  " +
      "LEFT JOIN GIRO ON PRODUCTO.GIRO = GIRO.GIRO " +
      "LEFT JOIN PROVEEDOR ON PRODUCTO.PROVEEDOR = PROVEEDOR.PROVEEDOR " +
      "LEFT JOIN SUBGRUPO ON PRODUCTO.SUBGRUPO = SUBGRUPO.SUBGRUPO AND SUBGRUPO.GRUPO = GRUPO.GRUPO " +
      "LEFT JOIN (SELECT PRODUCTO, SUM(CANTIDAD) EXISTENCIA FROM CAPA GROUP BY CAPA.PRODUCTO) INVENTARIO " +
      "ON PRODUCTO.PRODUCTO = INVENTARIO.PRODUCTO "+
      "LEFT JOIN " +
      "(SELECT  MAX(COMPRA.FECHA) FECHA_ULTIMA_COMPRA, COMPRADET.PRODUCTO ,COMPRADET.costo COSTO_ULTIMA_COMPRA  " +
      " FROM COMPRA " +
      " INNER JOIN COMPRADET ON  COMPRA.COMPRA = COMPRADET.COMPRA " +
      " GROUP BY COMPRA.FECHA, COMPRADET.PRODUCTO , COMPRADET.costo " +
      " ORDER BY compra.fecha DESC " +
      ") COMPRAS " +
      "ON COMPRAS.PRODUCTO = PRODUCTO.PRODUCTO " +
      "WHERE PRODUCTO.BAJA = 'N'";


    public string articulosMicrosipConn =
      "SELECT " +
      "claves_articulos.clave_articulo PRODUCTO, articulos.nombre DESCRIPCION, " +
      "articulos.unidad_compra, articulos.unidad_venta, " +
      "articulos.contenido_unidad_compra, " +
      "articulos.es_almacenable, articulos.es_importado, articulos.es_siempre_importado, articulos.peso_unitario, articulos.estatus, " +
      "lineas_articulos.linea_articulo_id, lineas_articulos.nombre NLinea " +
      "FROM articulos articulos, claves_articulos claves_articulos, comis_ven_linea comis_ven_linea, grupos_lineas grupos_lineas, " +
      "lineas_articulos lineas_articulos " +
      "WHERE articulos.articulo_id = claves_articulos.articulo_id and " +
      "articulos.linea_articulo_id = lineas_articulos.linea_articulo_id and " +
      "comis_ven_linea.linea_articulo_id = articulos.linea_articulo_id and " +
      "lineas_articulos.grupo_linea_id = grupos_lineas.grupo_linea_id " +
      "ORDER BY claves_articulos.clave_articulo";

  }

}
